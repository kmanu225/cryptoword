import random
from sympy import gcd


def get_primes(N, e, d):
    """
    Factorizes the RSA modulus N using private exponent d and public exponent e.

    Parameters:
    N (int): The RSA modulus
    e (int): The public exponent
    d (int): The private exponent

    Returns:
    tuple: (p, q) where p and q are the prime factors of N
    """
    k = d * e - 1

    while True:
        g = random.randint(2, N - 1)
        t = k
        while t % 2 == 0:
            t //= 2
            x = pow(g, t, N)

            if x != 1 and gcd(x - 1, N) > 1:
                p = gcd(x - 1, N)
                q = N // p
                return p, q


if __name__ == "__main__":

    N, e, d = (
        21711308225346315542706844618441565741046498277716979943478360598053144971379956916575370343448988601905854572029635846626259487297950305231661109855854947494209135205589258643517961521594924368498672064293208230802441077390193682958095111922082677813175804775628884377724377647428385841831277059274172982280545237765559969228707506857561215268491024097063920337721783673060530181637161577401589126558556182546896783307370517275046522704047385786111489447064794210010802761708615907245523492585896286374996088089317826162798278528296206977900274431829829206103227171839270887476436899494428371323874689055690729986771,
        65537,
        2734411677251148030723138005716109733838866545375527602018255159319631026653190783670493107936401603981429171880504360560494771017246468702902647370954220312452541342858747590576273775107870450853533717116684326976263006435733382045807971890762018747729574021057430331778033982359184838159747331236538501849965329264774927607570410347019418407451937875684373454982306923178403161216817237890962651214718831954215200637651103907209347900857824722653217179548148145687181377220544864521808230122730967452981435355334932104265488075777638608041325256776275200067541533022527964743478554948792578057708522350812154888097,
    )

    print(f"N: {N}\ne: {e}\nd: {d}")
    k = d * e - 1
    p, q = None, None

    p, q = get_primes(N, e, d)
    print(f"p: {p}\nq: {q}\np*q: {p*q}")
